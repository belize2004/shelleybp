{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/amrtamer/SWE/work/shelleybp/src/lib/const.ts"],"sourcesContent":["export const API_BASE_URL =\n  // process.env.NODE_ENV === \"development\"\n  // ? \"http://localhost:1337/api\"\n  // :\n  \"https://cms.shelleyandblaine.com/api\";\n\nexport const IMAGE_BASE_URL =\n  // process.env.NODE_ENV === \"development\"\n  // ? \"http://localhost:1337\"\n  // :\n  \"https://cms.shelleyandblaine.com\";\n\nexport const API_KEY =\n  \"a081a87bb7e7e60794a31bceed5f835cd9261ecd45b37875c9486a0daa89a6a645838c4de112f3d4049710d3dbe0df93e8067d446ce3c9ed73a8ea50ef1754fe3c5f5db0269bea2b75475b8c8d4eabef92a71e9ed8334f3b1a8c41922f9d008bda3341ced48d3d58283f4029457e64d346b08d905a1bc12a0c56da5295741f70\";\n"],"names":[],"mappings":";;;;;AAAO,MAAM,eACX,yCAAyC;AACzC,gCAAgC;AAChC,IAAI;AACJ;AAEK,MAAM,iBACX,yCAAyC;AACzC,4BAA4B;AAC5B,IAAI;AACJ;AAEK,MAAM,UACX"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/amrtamer/SWE/work/shelleybp/src/lib/api/instance.ts"],"sourcesContent":["import axios from \"axios\";\nimport { API_BASE_URL, API_KEY } from \"../const\";\n\nexport const axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${API_KEY}`,\n  },\n});\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,gBAAgB,uLAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACxC,SAAS,mHAAA,CAAA,eAAY;IACrB,SAAS;QACP,gBAAgB;QAChB,eAAe,CAAC,OAAO,EAAE,mHAAA,CAAA,UAAO,EAAE;IACpC;AACF"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/amrtamer/SWE/work/shelleybp/src/lib/api/home.ts"],"sourcesContent":["import { Blog } from \"../types\";\nimport { axiosInstance } from \"./instance\";\n\ninterface Res {\n  data: ResData[];\n  meta: Meta;\n}\n\ninterface ResData {\n  id: number;\n  documentId: string;\n  createdAt: string;\n  updatedAt: string;\n  publishedAt: string;\n  gallery_item: GalleryItem[];\n  blogs: Blog[];\n}\n\ninterface GalleryItem {\n  order: number;\n  id: number;\n  image: Image;\n}\n\ninterface Image {\n  id: number;\n  documentId: string;\n  name: string;\n  alternativeText: any;\n  caption: any;\n  width: number;\n  height: number;\n  formats: Formats;\n  hash: string;\n  ext: string;\n  mime: string;\n  size: number;\n  url: string;\n  previewUrl: any;\n  provider: string;\n  provider_metadata: any;\n  createdAt: string;\n  updatedAt: string;\n  publishedAt: string;\n}\n\ninterface Formats {\n  thumbnail: Thumbnail;\n  small: Small;\n  medium: Medium;\n  large: Large;\n}\n\ninterface Thumbnail {\n  name: string;\n  hash: string;\n  ext: string;\n  mime: string;\n  path: any;\n  width: number;\n  height: number;\n  size: number;\n  sizeInBytes: number;\n  url: string;\n}\n\ninterface Small {\n  name: string;\n  hash: string;\n  ext: string;\n  mime: string;\n  path: any;\n  width: number;\n  height: number;\n  size: number;\n  sizeInBytes: number;\n  url: string;\n}\n\ninterface Medium {\n  name: string;\n  hash: string;\n  ext: string;\n  mime: string;\n  path: any;\n  width: number;\n  height: number;\n  size: number;\n  sizeInBytes: number;\n  url: string;\n}\n\ninterface Large {\n  name: string;\n  hash: string;\n  ext: string;\n  mime: string;\n  path: any;\n  width: number;\n  height: number;\n  size: number;\n  sizeInBytes: number;\n  url: string;\n}\n\ninterface Meta {\n  pagination: Pagination;\n}\n\ninterface Pagination {\n  page: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n}\n\nimport { queryOptions } from \"@tanstack/react-query\";\n\nexport const homeOptions = queryOptions({\n  queryKey: [\"homess\"],\n  queryFn: async () => {\n    const response = await axiosInstance.get<Res>(\n      `/homes?populate[gallery_item][populate]=*&populate[blogs][populate]=*`\n    );\n\n    console.log(response.data);\n    return response.data;\n  },\n});\n"],"names":[],"mappings":";;;AACA;AAmHA;;;AAEO,MAAM,cAAc,CAAA,GAAA,+QAAA,CAAA,eAAY,AAAD,EAAE;IACtC,UAAU;QAAC;KAAS;IACpB,SAAS;QACP,MAAM,WAAW,MAAM,6HAAA,CAAA,gBAAa,CAAC,GAAG,CACtC,CAAC,qEAAqE,CAAC;QAGzE,QAAQ,GAAG,CAAC,SAAS,IAAI;QACzB,OAAO,SAAS,IAAI;IACtB;AACF"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/amrtamer/SWE/work/shelleybp/src/components/blog/card.tsx"],"sourcesContent":["import { IMAGE_BASE_URL } from \"@/lib/const\";\nimport { Root } from \"@/lib/types\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Button } from \"../ui/button\";\nexport function BlogCard({\n  blogPost,\n}: {\n  blogPost: Root[\"data\"][0][\"blogs\"][0];\n}) {\n  console.log(blogPost);\n  return (\n    <div className=\"bg-white flex flex-col rounded-xl gap-4 pb-4 border shadow-md\">\n      {blogPost.cover && (\n        <Image\n          src={IMAGE_BASE_URL + blogPost.cover?.url}\n          width={1000}\n          height={1000}\n          alt=\"Image\"\n          className=\" w-full h-60 object-cover  rounded-t-xl\"\n        />\n      )}\n      <h1 className=\"px-4 text-2xl font-bold\">{blogPost.title}</h1>\n      <p className=\"px-4 line-clamp-2 text-zinc-500\">{blogPost.desc}</p>\n      <Button asChild className=\"w-fit\" variant={\"link\"}>\n        <Link href={`/blog/${blogPost.documentId}`}>Read more</Link>\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;;;;;;AACO,SAAS,SAAS,EACvB,QAAQ,EAGT;IACC,QAAQ,GAAG,CAAC;IACZ,qBACE,icAAC;QAAI,WAAU;;YACZ,SAAS,KAAK,kBACb,icAAC,gVAAA,CAAA,UAAK;gBACJ,KAAK,mHAAA,CAAA,iBAAc,GAAG,SAAS,KAAK,EAAE;gBACtC,OAAO;gBACP,QAAQ;gBACR,KAAI;gBACJ,WAAU;;;;;;0BAGd,icAAC;gBAAG,WAAU;0BAA2B,SAAS,KAAK;;;;;;0BACvD,icAAC;gBAAE,WAAU;0BAAmC,SAAS,IAAI;;;;;;0BAC7D,icAAC,kIAAA,CAAA,SAAM;gBAAC,OAAO;gBAAC,WAAU;gBAAQ,SAAS;0BACzC,cAAA,icAAC,+WAAA,CAAA,UAAI;oBAAC,MAAM,CAAC,MAAM,EAAE,SAAS,UAAU,EAAE;8BAAE;;;;;;;;;;;;;;;;;AAIpD"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Users/amrtamer/SWE/work/shelleybp/src/app/page.client.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport Masonry from \"react-masonry-css\";\nimport { IMAGE_BASE_URL } from \"@/lib/const\";\nimport { useSuspenseQuery } from \"@tanstack/react-query\";\nimport { homeOptions } from \"@/lib/api/home\";\nimport { BlogCard } from \"@/components/blog/card\";\n\ninterface PageClientProps {\n  isMobile: boolean;\n}\n\nexport default function PageClient({ isMobile }: PageClientProps) {\n  const { data } = useSuspenseQuery(homeOptions);\n\n  const breakpointColumnsObj = {\n    default: 3,\n    1440: 4,\n    1100: 3,\n    700: 2,\n    500: 1,\n  };\n\n  const imagesSorted = data.data[0].gallery_item?.filter(\n    (image) => image.order\n  );\n\n  const imagesUnSorted = data.data[0].gallery_item?.filter(\n    (image) => !image.order\n  );\n\n  const ImageComponent = ({ image, index }: { image: any; index: number }) => (\n    <div key={`image${image.id}`} className=\"mb-4\">\n      <Image\n        src={IMAGE_BASE_URL + (image.image?.url || \"\")}\n        width={image.image?.width || 1000}\n        height={image.image?.height || 1000}\n        alt={image.image?.alt || \"Gallery image\"}\n        className=\"rounded-xl w-full h-auto\"\n        priority={index < 4}\n        loading={index < 4 ? \"eager\" : \"lazy\"}\n      />\n    </div>\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        // <div className=\"flex flex-col gap-4\">\n        //   {/* <Image\n        //     src=\"/ratings.webp\"\n        //     width={2000}\n        //     height={2000}\n        //     alt=\"Ratings\"\n        //     className=\"my-8 w-full\"\n        //   /> */}\n        //   {imagesSorted\n        //     .sort((a, b) => a.order - b.order)\n        //     .map((image, idx) => (\n        //       <ImageComponent key={image.id} image={image} index={idx} />\n        //     ))}\n        //   {imagesUnSorted.map((image, idx) => (\n        //     <ImageComponent key={image.id} image={image} index={idx} />\n        //   ))}\n        // </div>\n        <Masonry\n          breakpointCols={{\n            default: 2,\n            500: 2,\n          }}\n          className=\"flex w-auto\"\n          columnClassName=\"bg-clip-padding px-2\"\n        >\n          {/* <Image\n          src=\"/ratings.webp\"\n          width={2000}\n          height={2000}\n          alt=\"Ratings\"\n          className=\"my-8 w-full\"\n        /> */}\n\n          {imagesSorted\n            .sort((a, b) => a.order - b.order)\n            .map((image, idx) => (\n              <ImageComponent key={image.id} image={image} index={idx} />\n            ))}\n          {imagesUnSorted.map((image, idx) => (\n            <ImageComponent key={image.id} image={image} index={idx} />\n          ))}\n        </Masonry>\n      ) : (\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"flex w-auto\"\n          columnClassName=\"bg-clip-padding px-2\"\n        >\n          {/* <Image\n            src=\"/ratings.webp\"\n            width={2000}\n            height={2000}\n            alt=\"Ratings\"\n            className=\"my-8 w-full\"\n          /> */}\n          {imagesSorted\n            .sort((a, b) => a.order - b.order)\n            .map((image, idx) => (\n              <ImageComponent key={image.id} image={image} index={idx} />\n            ))}\n          {imagesUnSorted.map((image, idx) => (\n            <ImageComponent key={image.id} image={image} index={idx} />\n          ))}\n        </Masonry>\n      )}\n      <div className=\"flex flex-col p-8 gap-8\">\n        {data.data[0].blogs.map((b) => (\n          <BlogCard key={b.id} blogPost={b} />\n        ))}\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AAFA;AALA;;;;;;;;AAae,SAAS,WAAW,EAAE,QAAQ,EAAmB;IAC9D,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,mRAAA,CAAA,mBAAgB,AAAD,EAAE,yHAAA,CAAA,cAAW;IAE7C,MAAM,uBAAuB;QAC3B,SAAS;QACT,MAAM;QACN,MAAM;QACN,KAAK;QACL,KAAK;IACP;IAEA,MAAM,eAAe,KAAK,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,OAC9C,CAAC,QAAU,MAAM,KAAK;IAGxB,MAAM,iBAAiB,KAAK,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,OAChD,CAAC,QAAU,CAAC,MAAM,KAAK;IAGzB,MAAM,iBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAiC,iBACrE,icAAC;YAA6B,WAAU;sBACtC,cAAA,icAAC,gVAAA,CAAA,UAAK;gBACJ,KAAK,mHAAA,CAAA,iBAAc,GAAG,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE;gBAC7C,OAAO,MAAM,KAAK,EAAE,SAAS;gBAC7B,QAAQ,MAAM,KAAK,EAAE,UAAU;gBAC/B,KAAK,MAAM,KAAK,EAAE,OAAO;gBACzB,WAAU;gBACV,UAAU,QAAQ;gBAClB,SAAS,QAAQ,IAAI,UAAU;;;;;;WARzB,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;;;;;IAa9B,qBACE;;YACG,WACC,wCAAwC;YACxC,eAAe;YACf,0BAA0B;YAC1B,mBAAmB;YACnB,oBAAoB;YACpB,oBAAoB;YACpB,8BAA8B;YAC9B,WAAW;YACX,kBAAkB;YAClB,yCAAyC;YACzC,6BAA6B;YAC7B,oEAAoE;YACpE,UAAU;YACV,0CAA0C;YAC1C,kEAAkE;YAClE,QAAQ;YACR,SAAS;0BACT,icAAC,+QAAA,CAAA,UAAO;gBACN,gBAAgB;oBACd,SAAS;oBACT,KAAK;gBACP;gBACA,WAAU;gBACV,iBAAgB;;oBAUf,aACE,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,EAChC,GAAG,CAAC,CAAC,OAAO,oBACX,icAAC;4BAA8B,OAAO;4BAAO,OAAO;2BAA/B,MAAM,EAAE;;;;;oBAEhC,eAAe,GAAG,CAAC,CAAC,OAAO,oBAC1B,icAAC;4BAA8B,OAAO;4BAAO,OAAO;2BAA/B,MAAM,EAAE;;;;;;;;;;qCAIjC,icAAC,+QAAA,CAAA,UAAO;gBACN,gBAAgB;gBAChB,WAAU;gBACV,iBAAgB;;oBASf,aACE,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,EAChC,GAAG,CAAC,CAAC,OAAO,oBACX,icAAC;4BAA8B,OAAO;4BAAO,OAAO;2BAA/B,MAAM,EAAE;;;;;oBAEhC,eAAe,GAAG,CAAC,CAAC,OAAO,oBAC1B,icAAC;4BAA8B,OAAO;4BAAO,OAAO;2BAA/B,MAAM,EAAE;;;;;;;;;;;0BAInC,icAAC;gBAAI,WAAU;0BACZ,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,kBACvB,icAAC,kIAAA,CAAA,WAAQ;wBAAY,UAAU;uBAAhB,EAAE,EAAE;;;;;;;;;;;;AAK7B"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}